version: "3"

services:
  mysql_db:
    image: mysql:5.7
    container_name: mysql_db
    restart: on-failure
    environment:
      - MYSQL_DATABASE=full-stack-ecommerce
      - MYSQL_USER=liusha
      - MYSQL_PASSWORD=dev_password
      - MYSQL_ROOT_PASSWORD=dev_password
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - "./db_scripts/create-user.sql:/docker-entrypoint-initdb.d/1.sql"
      - "./db_scripts/create-products.sql:/docker-entrypoint-initdb.d/2.sql"

  spring_boot_backend:
    image: "spring_boot_backend:latest"
    build:
      context: ..
      dockerfile: backend.Dockerfile
    container_name: "spring_boot_backend"
    restart: on-failure
    depends_on:
      - mysql_db
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.driver-class-name": "com.mysql.cj.jdbc.Driver",
        "spring.datasource.url": "jdbc:mysql://mysql_db:3306/full-stack-ecommerce?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC",
        "spring.datasource.username": "liusha",
        "spring.datasource.password": "dev_password",
        "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto": "update",
        "spring.data.rest.base-path": "/api/v0"
      }'
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true

  angular_frontend:
    image: "angular_frontend:latest"
    build:
      context: ..
      dockerfile: frontend.Dockerfile
    container_name: "angular_frontend"
    restart: on-failure
    ports:
      - "4200:80"
